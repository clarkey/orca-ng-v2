# Build stage
FROM golang:1.23-alpine AS builder

RUN apk add --no-cache git

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o orca-server cmd/orca/main.go

# Build the key generator tool
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o orca-keygen cmd/orca-keygen/main.go

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates openssl netcat-openbsd

WORKDIR /root/

# Copy the binaries from builder
COPY --from=builder /app/orca-server .
COPY --from=builder /app/orca-keygen .
COPY --from=builder /app/docker-entrypoint.sh .

# Make entrypoint executable
RUN chmod +x docker-entrypoint.sh

# Expose port
EXPOSE 8080

# Use the entrypoint script
ENTRYPOINT ["./docker-entrypoint.sh"]

# Default command
CMD ["./orca-server"]